export const IPC_EVENT = {
  commonTest: 'commonTest',
  powerSaveBlockerStart: 'powerSaveBlockerStart',
  closeAllWindow: 'closeAllWindow',
  closeWindow: 'closeWindow',
  windowMinimize: 'windowMinimize',
  windowMaximize: 'windowMaximize',
  handleOpenDevTools: 'handleOpenDevTools',
  handleMoveScreenRightBottom: 'handleMoveScreenRightBottom',
  mouseScrollDown: 'mouseScrollDown',
  mouseScrollUp: 'mouseScrollUp',
  mouseScrollLeft: 'mouseScrollLeft',
  mouseScrollRight: 'mouseScrollRight',
  mouseSetPosition: 'mouseSetPosition',
  mouseMove: 'mouseMove',
  mouseDrag: 'mouseDrag',
  keyboardType: 'keyboardType',
  keyboardReleaseKey: 'keyboardReleaseKey',
  keyboardPressKey: 'keyboardPressKey',
  mousePressButtonLeft: 'mousePressButtonLeft',
  mouseReleaseButtonLeft: 'mouseReleaseButtonLeft',
  mouseDoubleClick: 'mouseDoubleClick',
  mouseLeftClick: 'mouseLeftClick',
  mouseRightClick: 'mouseRightClick',
  getMousePosition: 'getMousePosition',
  setWindowBounds: 'setWindowBounds',
  getWindowTitlebarHeight: 'getWindowTitlebarHeight',
  setWindowPosition: 'setWindowPosition',
  getWindowPosition: 'getWindowPosition',
  getScreenStream: 'getScreenStream',
  setAlwaysOnTop: 'setAlwaysOnTop',
  scaleFactor: 'scaleFactor',
  workAreaSize: 'workAreaSize',
  getPrimaryDisplaySize: 'getPrimaryDisplaySize',
  createWindow: 'createWindow',
  powerMonitorSuspend: 'powerMonitorSuspend',
  powerMonitorResume: 'powerMonitorResume',
  shellOpenExternal: 'shellOpenExternal',
  globalShortcut: 'globalShortcut',
  getPlatform: 'getPlatform',

  response_commonTest: 'response_commonTest',
  response_powerSaveBlockerStart: 'response_powerSaveBlockerStart',
  response_closeAllWindow: 'response_closeAllWindow',
  response_closeWindow: 'response_closeWindow',
  response_closeWindowed: 'response_closeWindowed',
  response_windowMinimize: 'response_windowMinimize',
  response_windowMaximize: 'response_windowMaximize',
  response_handleOpenDevTools: 'response_handleOpenDevTools',
  response_handleMoveScreenRightBottom: 'response_handleMoveScreenRightBottom',
  response_mouseScrollDown: 'response_mouseScrollDown',
  response_mouseScrollUp: 'response_mouseScrollUp',
  response_mouseScrollLeft: 'response_mouseScrollLeft',
  response_mouseScrollRight: 'response_mouseScrollRight',
  response_mouseSetPosition: 'response_mouseSetPosition',
  response_mouseMove: 'response_mouseMove',
  response_mouseDrag: 'response_mouseDrag',
  response_keyboardType: 'response_keyboardType',
  response_keyboardReleaseKey: 'response_keyboardReleaseKey',
  response_keyboardPressKey: 'response_keyboardPressKey',
  response_mousePressButtonLeft: 'response_mousePressButtonLeft',
  response_mouseReleaseButtonLeft: 'response_mouseReleaseButtonLeft',
  response_mouseDoubleClick: 'response_mouseDoubleClick',
  response_mouseLeftClick: 'response_mouseLeftClick',
  response_mouseRightClick: 'response_mouseRightClick',
  response_getMousePosition: 'response_getMousePosition',
  response_setWindowBounds: 'response_setWindowBounds',
  response_setWindowPosition: 'response_setWindowPosition',
  response_getWindowPosition: 'response_getWindowPosition',
  response_getScreenStream: 'response_getScreenStream',
  response_setAlwaysOnTop: 'response_setAlwaysOnTop',
  response_workAreaSize: 'response_workAreaSize',
  response_createWindow: 'response_createWindow',
  response_powerMonitorSuspend: 'response_powerMonitorSuspend',
  response_powerMonitorResume: 'response_powerMonitorResume',
  response_globalShortcut: 'response_globalShortcut',
  response_open_about: 'response_open_about',
  response_open_version: 'response_open_version',
};

export const GLOBAL_SHORTCUT = {
  // 'CommandOrControl+A': 'CommandOrControl+A',
  // 'CommandOrControl+C': 'CommandOrControl+C',
  // 'CommandOrControl+V': 'CommandOrControl+V',
  // 'CommandOrControl+S': 'CommandOrControl+S',
};
