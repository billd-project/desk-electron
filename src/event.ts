export const IPC_EVENT = {
  commonTest: 'commonTest',
  powerSaveBlockerStart: 'powerSaveBlockerStart',
  closeChildWindow: 'closeChildWindow',
  closeChildWindowed: 'closeChildWindowed',
  closeAllChildWindow: 'closeAllChildWindow',
  closeWindow: 'closeWindow',
  windowMinimize: 'windowMinimize',
  windowMaximize: 'windowMaximize',
  handleOpenDevTools: 'handleOpenDevTools',
  handleMoveScreenRightBottom: 'handleMoveScreenRightBottom',
  mouseScrollDown: 'mouseScrollDown',
  mouseScrollUp: 'mouseScrollUp',
  mouseScrollLeft: 'mouseScrollLeft',
  mouseScrollRight: 'mouseScrollRight',
  mouseSetPosition: 'mouseSetPosition',
  mouseMove: 'mouseMove',
  mouseDrag: 'mouseDrag',
  keyboardType: 'keyboardType',
  mousePressButtonLeft: 'mousePressButtonLeft',
  mouseReleaseButtonLeft: 'mouseReleaseButtonLeft',
  mouseDoubleClick: 'mouseDoubleClick',
  mouseLeftClick: 'mouseLeftClick',
  mouseRightClick: 'mouseRightClick',
  getMousePosition: 'getMousePosition',
  setChildWindowBounds: 'setChildWindowBounds',
  getChildWindowTitlebarHeight: 'getChildWindowTitlebarHeight',
  setWindowPosition: 'setWindowPosition',
  getWindowPosition: 'getWindowPosition',
  getScreenStream: 'getScreenStream',
  getMainWindowId: 'getMainWindowId',
  mainWindowSetAlwaysOnTop: 'mainWindowSetAlwaysOnTop',
  scaleFactor: 'scaleFactor',
  workAreaSize: 'workAreaSize',
  getPrimaryDisplaySize: 'getPrimaryDisplaySize',
  childWindowInit: 'childWindowInit',
  createWindow: 'createWindow',
  powerMonitorSuspend: 'powerMonitorSuspend',
  powerMonitorResume: 'powerMonitorResume',
  shellOpenExternal: 'shellOpenExternal',

  response_commonTest: 'response_commonTest',
  response_powerSaveBlockerStart: 'response_powerSaveBlockerStart',
  response_closeChildWindow: 'response_closeChildWindow',
  response_closeChildWindowed: 'response_closeChildWindowed',
  response_closeAllChildWindow: 'response_closeAllChildWindow',
  response_closeWindow: 'response_closeWindow',
  response_windowMinimize: 'response_windowMinimize',
  response_windowMaximize: 'response_windowMaximize',
  response_handleOpenDevTools: 'response_handleOpenDevTools',
  response_handleMoveScreenRightBottom: 'response_handleMoveScreenRightBottom',
  response_mouseScrollDown: 'response_mouseScrollDown',
  response_mouseScrollUp: 'response_mouseScrollUp',
  response_mouseScrollLeft: 'response_mouseScrollLeft',
  response_mouseScrollRight: 'response_mouseScrollRight',
  response_mouseSetPosition: 'response_mouseSetPosition',
  response_mouseMove: 'response_mouseMove',
  response_mouseDrag: 'response_mouseDrag',
  response_keyboardType: 'response_keyboardType',
  response_mousePressButtonLeft: 'response_mousePressButtonLeft',
  response_mouseReleaseButtonLeft: 'response_mouseReleaseButtonLeft',
  response_mouseDoubleClick: 'response_mouseDoubleClick',
  response_mouseLeftClick: 'response_mouseLeftClick',
  response_mouseRightClick: 'response_mouseRightClick',
  response_getMousePosition: 'response_getMousePosition',
  response_setChildWindowBounds: 'response_setChildWindowBounds',
  response_getChildWindowTitlebarHeight:
    'response_getChildWindowTitlebarHeight',
  response_setWindowPosition: 'response_setWindowPosition',
  response_getWindowPosition: 'response_getWindowPosition',
  response_getScreenStream: 'response_getScreenStream',
  response_getMainWindowId: 'response_getMainWindowId',
  response_mainWindowSetAlwaysOnTop: 'response_mainWindowSetAlwaysOnTop',
  response_scaleFactor: 'response_scaleFactor',
  response_workAreaSize: 'response_workAreaSize',
  response_getPrimaryDisplaySize: 'response_getPrimaryDisplaySize',
  response_childWindowInit: 'response_childWindowInit',
  response_createWindow: 'response_createWindow',
  response_powerMonitorSuspend: 'response_powerMonitorSuspend',
  response_powerMonitorResume: 'response_powerMonitorResume',
  response_shellOpenExternal: 'response_shellOpenExternal',
};
